<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>33</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>getClick</FUNCTION>
    <DECORATED>?getClick@@YAHXZ</DECORATED>
    <FUNCLINE>172</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>183</LINE>
      <COLUMN>86</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>getClick</FUNCTION>
    <DECORATED>?getClick@@YAHXZ</DECORATED>
    <FUNCLINE>172</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>189</LINE>
      <COLUMN>19</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>getClick</FUNCTION>
    <DECORATED>?getClick@@YAHXZ</DECORATED>
    <FUNCLINE>172</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>189</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>getClick</FUNCTION>
    <DECORATED>?getClick@@YAHXZ</DECORATED>
    <FUNCLINE>172</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>261</LINE>
      <COLUMN>30</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>makeStr</FUNCTION>
    <DECORATED>?makeStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHH@Z</DECORATED>
    <FUNCLINE>253</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>261</LINE>
      <COLUMN>25</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>makeStr</FUNCTION>
    <DECORATED>?makeStr@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@HHH@Z</DECORATED>
    <FUNCLINE>253</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>285</LINE>
      <COLUMN>43</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>evaluateStr</FUNCTION>
    <DECORATED>?evaluateStr@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>280</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>295</LINE>
      <COLUMN>47</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>evaluateStr</FUNCTION>
    <DECORATED>?evaluateStr@@YAHV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z</DECORATED>
    <FUNCLINE>280</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>320</LINE>
      <COLUMN>31</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 + ，然后将结果转换到 8 字节值。在调用运算符 + 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>evaluatePos</FUNCTION>
    <DECORATED>?evaluatePos@@YAHHD@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>320</LINE>
      <COLUMN>26</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 * ，然后将结果转换到 8 字节值。在调用运算符 * 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>evaluatePos</FUNCTION>
    <DECORATED>?evaluatePos@@YAHHD@Z</DECORATED>
    <FUNCLINE>305</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\cyl\Documents\PD_2021_A\c2021-1\实验\MyFiveChess\MyFiveChess\MyFiveChess\</FILEPATH>
      <FILENAME>MyFiveChess.cpp</FILENAME>
      <LINE>352</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>算术溢出: 使用 4 字节值上的运算符 - ，然后将结果转换到 8 字节值。在调用运算符 - 之前将值强制转换为宽类型可避免溢出(io.2)。</DESCRIPTION>
    <FUNCTION>negmax</FUNCTION>
    <DECORATED>?negmax@@YAHDHHH@Z</DECORATED>
    <FUNCLINE>334</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>